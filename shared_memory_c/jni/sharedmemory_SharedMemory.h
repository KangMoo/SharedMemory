/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sharedmemory_SharedMemory */

#ifndef _Included_sharedmemory_SharedMemory
#define _Included_sharedmemory_SharedMemory
#ifdef __cplusplus
extern "C" {
#endif
#undef sharedmemory_SharedMemory_noGCJ
#define sharedmemory_SharedMemory_noGCJ 1L
/*
 * Class:     sharedmemory_SharedMemory
 * Method:    get_memory_size
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_sharedmemory_SharedMemory_get_1memory_1size
  (JNIEnv *, jobject, jstring);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    map_memory
 * Signature: (Ljava/lang/String;J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_sharedmemory_SharedMemory_map_1memory
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    map_existing_memory
 * Signature: (Ljava/lang/String;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_sharedmemory_SharedMemory_map_1existing_1memory
  (JNIEnv *, jobject, jstring);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    closeShared
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_closeShared
  (JNIEnv *, jobject, jstring);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    unmapMemory
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_unmapMemory
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    open_sem
 * Signature: (Ljava/lang/String;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_sharedmemory_SharedMemory_open_1sem
  (JNIEnv *, jobject, jstring);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    close_sem
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_close_1sem
  (JNIEnv *, jobject, jstring);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    posix_synchronized
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_posix_1synchronized
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    posix_unlock
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_posix_1unlock
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    posix_wait
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_posix_1wait
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    posix_notifyAll
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_posix_1notifyAll
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sharedmemory_SharedMemory
 * Method:    posix_notify
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_sharedmemory_SharedMemory_posix_1notify
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
